type Query {
    grades(courseId: ID, studentId: ID, final: Boolean): [Grade]!
}

type Mutation {
    addGrade(grade: GradeInput!): Grade!
    addGrades(grades: [GradeInput!]!): [Grade!]!
    updateGrade(grade: GradeInput!): Grade!
}

type Grade {
    student: Person!
    activity: Activity!
    points: Int!
}

# in all types, where name and final optional values exist
# one of them is required, and both cannot exist at once
input GradeInput {
    studentId: ID!
    courseId: ID!
    points: Int!
    name: String
    final: Boolean
}
