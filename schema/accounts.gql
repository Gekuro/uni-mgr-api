type Query {
  account(UUID: ID!): Account
  accounts: [Account]!
  self: Account
  login(credentials: Credentials!): LoginStatus!
}

type Mutation {
  registerAccount(credentials: Credentials!): RegisterStatus!
}

type Account {
  UUID: ID!
  personalData: Person!
}

input Credentials {
  UUID: ID!
  password: String!
}

type RegisterStatus {
  success: Boolean!
  error: String
}

type LoginStatus {
  token: TokenHeader
  error: String
}

type TokenHeader {
  Authorization: String!
}
